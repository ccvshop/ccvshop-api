create_release:
    stage: deploy
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    tags:
        - docker
        - linux
    needs: []
    rules:
        # Run this job when a tag is created
        - if: $CI_COMMIT_TAG
    script:
        - echo "running release_job for $CI_COMMIT_TAG"
        - echo "Parsing changelog..."
        - >
            awk "/^## \\[${CI_COMMIT_TAG}\\]/ {flag=1; next}
                 /^## \\[/ {flag=0} flag" CHANGELOG.md > description.md

    release:
        name: "${CI_PROJECT_NAME} ${CI_COMMIT_TAG}"
        tag_name: '$CI_COMMIT_TAG'
        description: ./description.md
        ref: '$CI_COMMIT_SHA'


release_to_github:
    stage: deploy
    image: alpine:latest
    tags:
        - docker
        - linux
    needs:
        - create_release
    rules:
        # Run this job when a tag is created
        - if: '$CI_COMMIT_TAG'
    before_script:
        - apk add --no-cache git curl jq
        - git config --global user.email "ci-bot@ccvshop.nl"
        - git config --global user.name "GitLab CI Bot"
    script:
        # 1. Haal de changelog uit CHANGELOG.md
        - CHANGELOG=$(awk "/^## \\[${CI_COMMIT_TAG}\\]/ {flag=1; next} /^## \\[/ {flag=0} flag" CHANGELOG.md)

        # 2. Reset repo naar orphan commit zodat alleen de release inhoud overblijft
        - git checkout $CI_COMMIT_TAG
        - git checkout --orphan release-tmp
        - git add -A
        - git commit -m "Release $CI_COMMIT_TAG"
        - git branch -M master

        # 3. Push code als één commit naar GitHub (via HTTPS + token)
        - git remote -v
        - git remote remove origin 2>/dev/null || true
        - git remote remove github 2>/dev/null || true
        - git remote add github https://x-access-token:$GITHUB_TOKEN@github.com/ccvshop/ccvshop-api.git
        # Niet nog naar Master pushen
#        - git push --force github master
        - git tag -f "$CI_COMMIT_TAG" -m "$CHANGELOG"
        - git push --force github "$CI_COMMIT_TAG"

        # 4. Maak een GitHub release aan
        - CHANGELOG_ESCAPED=$(echo "$CHANGELOG" | jq -Rs .)
        - >
            curl -s -X POST https://api.github.com/repos/ccvshop/ccvshop-api/releases
            -H "Authorization: token $GITHUB_TOKEN"
            -H "Content-Type: application/json"
            -d "{
                  \"tag_name\": \"$CI_COMMIT_TAG\",
                  \"name\": \"$CI_COMMIT_TAG\",
                  \"body\": $CHANGELOG_ESCAPED
                }"
